// This file is auto-generated by @hey-api/openapi-ts

export type DetailedEventResponseDto = {
    id?: bigint;
    name?: string;
    description?: string;
    startTime?: LocalDateTime;
    endTime?: LocalDateTime;
    bookingDeadline?: LocalDateTime;
    location?: EventLocationResponseDto;
    manager?: UserDto;
    eventUserAllowances?: EventUserAllowancesDto[];
};

export type DetailedReservationResponseDto = {
    id?: bigint;
    user?: UserDto;
    event?: DetailedEventResponseDto;
    seat?: SeatDto;
    reservationDateTime?: LocalDateTime;
};

export type EmailRequest = {
    email: string;
};

export type EventLocationRequestDto = {
    name: string;
    address: string;
    capacity: number;
};

export type EventLocationResponseDto = {
    id?: bigint;
    name?: string;
    address?: string;
    capacity?: number;
    manager?: LimitedUserInfoDto;
    seats?: SeatDto[];
};

export type EventRequestDto = {
    name: string;
    description: string;
    startTime: LocalDateTime;
    endTime: LocalDateTime;
    bookingDeadline: LocalDateTime;
    eventLocationId: bigint;
};

export type EventResponseDto = {
    id?: bigint;
    name?: string;
    description?: string;
    startTime?: LocalDateTime;
    endTime?: LocalDateTime;
    bookingDeadline?: LocalDateTime;
    location?: EventLocationResponseDto;
};

export type EventUserAllowancesDto = {
    eventId?: bigint;
    userId?: bigint;
    reservationsAllowedCount?: number;
};

export type LimitedUserInfoDto = {
    id?: bigint;
    username?: string;
};

export type LocalDateTime = Date;

export type LoginRequestDto = {
    username: string;
    password: string;
};

export type ReservationRequestDto = {
    eventId: bigint;
    userId: bigint;
    seatId: bigint;
};

export type ReservationResponseDto = {
    id?: bigint;
    userId?: bigint;
    eventId?: bigint;
    seat?: SeatDto;
    reservationDateTime?: LocalDateTime;
};

export type ReservationsRequestCreateDto = {
    eventId: bigint;
    seatIds: bigint[];
};

export type SeatDto = {
    id?: bigint;
    seatNumber?: string;
    locationId?: bigint;
    xCoordinate?: number;
    yCoordinate?: number;
};

export type SeatRequestDto = {
    seatNumber: string;
    eventLocationId: bigint;
    xCoordinate: number;
    yCoordinate: number;
};

export type SeatResponseDto = {
    id?: bigint;
    seatNumber?: string;
    location?: EventLocationResponseDto;
    xCoordinate?: number;
    yCoordinate?: number;
};

export type UserCreationDto = {
    username: string;
    email: string;
    password: string;
    firstname: string;
    lastname: string;
};

export type UserDto = {
    id?: bigint;
    username?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
};

export type UserProfileUpdateDto = {
    email: string;
    firstname: string;
    lastname: string;
    passwordHash: string;
    roles: string[];
};

export type PostApiAuthLoginData = {
    body: LoginRequestDto;
    path?: never;
    query?: never;
    url: '/api/auth/login';
};

export type PostApiAuthLoginErrors = {
    /**
     * Bad Request
     */
    400: unknown;
};

export type PostApiAuthLoginResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiEmailSendHelloData = {
    body: EmailRequest;
    path?: never;
    query?: never;
    url: '/api/email/send-hello';
};

export type PostApiEmailSendHelloErrors = {
    /**
     * Invalid email address
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
    /**
     * Error sending email
     */
    500: unknown;
};

export type PostApiEmailSendHelloResponses = {
    /**
     * Email sent successfully
     */
    200: unknown;
};

export type GetApiManagerEventlocationsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/manager/eventlocations';
};

export type GetApiManagerEventlocationsErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiManagerEventlocationsResponses = {
    /**
     * OK
     */
    200: EventLocationResponseDto[];
};

export type GetApiManagerEventlocationsResponse = GetApiManagerEventlocationsResponses[keyof GetApiManagerEventlocationsResponses];

export type PostApiManagerEventlocationsData = {
    body: EventLocationRequestDto;
    path?: never;
    query?: never;
    url: '/api/manager/eventlocations';
};

export type PostApiManagerEventlocationsErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiManagerEventlocationsResponses = {
    /**
     * OK
     */
    200: EventLocationResponseDto;
};

export type PostApiManagerEventlocationsResponse = PostApiManagerEventlocationsResponses[keyof PostApiManagerEventlocationsResponses];

export type DeleteApiManagerEventlocationsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/eventlocations/{id}';
};

export type DeleteApiManagerEventlocationsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiManagerEventlocationsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PutApiManagerEventlocationsByIdData = {
    body: EventLocationRequestDto;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/eventlocations/{id}';
};

export type PutApiManagerEventlocationsByIdErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiManagerEventlocationsByIdResponses = {
    /**
     * OK
     */
    200: EventLocationResponseDto;
};

export type PutApiManagerEventlocationsByIdResponse = PutApiManagerEventlocationsByIdResponses[keyof PutApiManagerEventlocationsByIdResponses];

export type GetApiManagerEventsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/manager/events';
};

export type GetApiManagerEventsErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiManagerEventsResponses = {
    /**
     * OK
     */
    200: DetailedEventResponseDto[];
};

export type GetApiManagerEventsResponse = GetApiManagerEventsResponses[keyof GetApiManagerEventsResponses];

export type PostApiManagerEventsData = {
    body: EventRequestDto;
    path?: never;
    query?: never;
    url: '/api/manager/events';
};

export type PostApiManagerEventsErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiManagerEventsResponses = {
    /**
     * OK
     */
    200: DetailedEventResponseDto;
};

export type PostApiManagerEventsResponse = PostApiManagerEventsResponses[keyof PostApiManagerEventsResponses];

export type PutApiManagerEventsByIdData = {
    body: EventRequestDto;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/events/{id}';
};

export type PutApiManagerEventsByIdErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiManagerEventsByIdResponses = {
    /**
     * OK
     */
    200: DetailedEventResponseDto;
};

export type PutApiManagerEventsByIdResponse = PutApiManagerEventsByIdResponses[keyof PutApiManagerEventsByIdResponses];

export type PostApiManagerReservationAllowanceData = {
    body: EventUserAllowancesDto;
    path?: never;
    query?: never;
    url: '/api/manager/reservationAllowance';
};

export type PostApiManagerReservationAllowanceErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiManagerReservationAllowanceResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiManagerReservationsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/manager/reservations';
};

export type GetApiManagerReservationsErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiManagerReservationsResponses = {
    /**
     * OK
     */
    200: DetailedReservationResponseDto[];
};

export type GetApiManagerReservationsResponse = GetApiManagerReservationsResponses[keyof GetApiManagerReservationsResponses];

export type PostApiManagerReservationsData = {
    body: ReservationRequestDto;
    path?: never;
    query?: never;
    url: '/api/manager/reservations';
};

export type PostApiManagerReservationsErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiManagerReservationsResponses = {
    /**
     * OK
     */
    200: DetailedReservationResponseDto;
};

export type PostApiManagerReservationsResponse = PostApiManagerReservationsResponses[keyof PostApiManagerReservationsResponses];

export type DeleteApiManagerReservationsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/reservations/{id}';
};

export type DeleteApiManagerReservationsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiManagerReservationsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiManagerReservationsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/reservations/{id}';
};

export type GetApiManagerReservationsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiManagerReservationsByIdResponses = {
    /**
     * OK
     */
    200: DetailedReservationResponseDto;
};

export type GetApiManagerReservationsByIdResponse = GetApiManagerReservationsByIdResponses[keyof GetApiManagerReservationsByIdResponses];

export type PutApiManagerReservationsByIdData = {
    body: ReservationRequestDto;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/reservations/{id}';
};

export type PutApiManagerReservationsByIdErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiManagerReservationsByIdResponses = {
    /**
     * OK
     */
    200: DetailedReservationResponseDto;
};

export type PutApiManagerReservationsByIdResponse = PutApiManagerReservationsByIdResponses[keyof PutApiManagerReservationsByIdResponses];

export type GetApiManagerSeatsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/manager/seats';
};

export type GetApiManagerSeatsErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiManagerSeatsResponses = {
    /**
     * OK
     */
    200: SeatResponseDto[];
};

export type GetApiManagerSeatsResponse = GetApiManagerSeatsResponses[keyof GetApiManagerSeatsResponses];

export type PostApiManagerSeatsData = {
    body: SeatRequestDto;
    path?: never;
    query?: never;
    url: '/api/manager/seats';
};

export type PostApiManagerSeatsErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiManagerSeatsResponses = {
    /**
     * OK
     */
    200: SeatResponseDto;
};

export type PostApiManagerSeatsResponse = PostApiManagerSeatsResponses[keyof PostApiManagerSeatsResponses];

export type DeleteApiManagerSeatsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/seats/{id}';
};

export type DeleteApiManagerSeatsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiManagerSeatsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiManagerSeatsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/seats/{id}';
};

export type GetApiManagerSeatsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiManagerSeatsByIdResponses = {
    /**
     * OK
     */
    200: SeatResponseDto;
};

export type GetApiManagerSeatsByIdResponse = GetApiManagerSeatsByIdResponses[keyof GetApiManagerSeatsByIdResponses];

export type PutApiManagerSeatsByIdData = {
    body: SeatRequestDto;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/manager/seats/{id}';
};

export type PutApiManagerSeatsByIdErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiManagerSeatsByIdResponses = {
    /**
     * OK
     */
    200: SeatResponseDto;
};

export type PutApiManagerSeatsByIdResponse = PutApiManagerSeatsByIdResponses[keyof PutApiManagerSeatsByIdResponses];

export type GetApiUserEventsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/events';
};

export type GetApiUserEventsErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUserEventsResponses = {
    /**
     * OK
     */
    200: EventResponseDto[];
};

export type GetApiUserEventsResponse = GetApiUserEventsResponses[keyof GetApiUserEventsResponses];

export type GetApiUserEventsAvailableSeatsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/user/events/available-seats/{id}';
};

export type GetApiUserEventsAvailableSeatsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUserEventsAvailableSeatsByIdResponses = {
    /**
     * OK
     */
    200: number;
};

export type GetApiUserEventsAvailableSeatsByIdResponse = GetApiUserEventsAvailableSeatsByIdResponses[keyof GetApiUserEventsAvailableSeatsByIdResponses];

export type GetApiUserReservationsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/reservations';
};

export type GetApiUserReservationsErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUserReservationsResponses = {
    /**
     * OK
     */
    200: ReservationResponseDto[];
};

export type GetApiUserReservationsResponse = GetApiUserReservationsResponses[keyof GetApiUserReservationsResponses];

export type PostApiUserReservationsData = {
    body: ReservationsRequestCreateDto;
    path?: never;
    query?: never;
    url: '/api/user/reservations';
};

export type PostApiUserReservationsErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiUserReservationsResponses = {
    /**
     * OK
     */
    200: ReservationResponseDto[];
};

export type PostApiUserReservationsResponse = PostApiUserReservationsResponses[keyof PostApiUserReservationsResponses];

export type DeleteApiUserReservationsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/user/reservations/{id}';
};

export type DeleteApiUserReservationsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiUserReservationsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUserReservationsByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/user/reservations/{id}';
};

export type GetApiUserReservationsByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUserReservationsByIdResponses = {
    /**
     * OK
     */
    200: ReservationResponseDto;
};

export type GetApiUserReservationsByIdResponse = GetApiUserReservationsByIdResponses[keyof GetApiUserReservationsByIdResponses];

export type GetApiUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users';
};

export type GetApiUsersErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUsersResponses = {
    /**
     * OK
     */
    200: LimitedUserInfoDto[];
};

export type GetApiUsersResponse = GetApiUsersResponses[keyof GetApiUsersResponses];

export type PostApiUsersData = {
    body: UserCreationDto;
    path?: never;
    query?: never;
    url: '/api/users';
};

export type PostApiUsersErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PostApiUsersResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PutApiUsersMeData = {
    body: UserProfileUpdateDto;
    path?: never;
    query?: never;
    url: '/api/users/me';
};

export type PutApiUsersMeErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiUsersMeResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUsersRolesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/roles';
};

export type GetApiUsersRolesErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUsersRolesResponses = {
    /**
     * OK
     */
    200: string[];
};

export type GetApiUsersRolesResponse = GetApiUsersRolesResponses[keyof GetApiUsersRolesResponses];

export type DeleteApiUsersByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type DeleteApiUsersByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type DeleteApiUsersByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUsersByIdData = {
    body?: never;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type GetApiUsersByIdErrors = {
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type GetApiUsersByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PutApiUsersByIdData = {
    body: UserProfileUpdateDto;
    path: {
        id: bigint;
    };
    query?: never;
    url: '/api/users/{id}';
};

export type PutApiUsersByIdErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Authorized
     */
    401: unknown;
    /**
     * Not Allowed
     */
    403: unknown;
};

export type PutApiUsersByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | 'http://0.0.0.0:8080' | (string & {});
};