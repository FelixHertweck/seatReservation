{
  "openapi" : "3.1.0",
  "components" : {
    "schemas" : {
      "EventLocationRequestDTO" : {
        "type" : "object",
        "required" : [ "name", "address", "capacity" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EventLocationResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "manager" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SeatDTO"
            }
          }
        }
      },
      "EventLocationResponseDTO1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "manager" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SeatDTO"
            }
          }
        }
      },
      "EventRequestDTO" : {
        "type" : "object",
        "required" : [ "name", "description", "startTime", "endTime", "bookingDeadline", "eventLocationId" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "bookingDeadline" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "eventLocationId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EventResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "bookingDeadline" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "location" : {
            "$ref" : "#/components/schemas/EventLocationResponseDTO"
          },
          "manager" : {
            "$ref" : "#/components/schemas/UserDTO1"
          },
          "eventUserAllowances" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/components/schemas/EventUserAllowancesDto"
            }
          }
        }
      },
      "EventResponseDTO1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "bookingDeadline" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "location" : {
            "$ref" : "#/components/schemas/EventLocationResponseDTO1"
          }
        }
      },
      "EventUserAllowancesDto" : {
        "type" : "object",
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "reservationsAllowedCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LimitedUserDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "LocalDateTime" : {
        "type" : "string",
        "format" : "date-time",
        "examples" : [ "2022-03-10T12:15:50" ]
      },
      "LoginRequestDTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "ReservationRequestCreateDTO" : {
        "type" : "object",
        "required" : [ "eventId", "seatIds" ],
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "minItems" : 1
          }
        }
      },
      "ReservationRequestDTO" : {
        "type" : "object",
        "required" : [ "eventId", "userId", "seatId" ],
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ReservationResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "event" : {
            "$ref" : "#/components/schemas/EventResponseDTO"
          },
          "seat" : {
            "$ref" : "#/components/schemas/SeatDTO1"
          },
          "reservationDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        }
      },
      "ReservationResponseDTO1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seat" : {
            "$ref" : "#/components/schemas/SeatDTO1"
          },
          "reservationDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        }
      },
      "SeatDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatNumber" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SeatDTO1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatNumber" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SeatRequestDTO" : {
        "type" : "object",
        "required" : [ "seatNumber", "eventLocationId", "xCoordinate", "yCoordinate" ],
        "properties" : {
          "seatNumber" : {
            "type" : "string"
          },
          "eventLocationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SeatResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatNumber" : {
            "type" : "string"
          },
          "location" : {
            "$ref" : "#/components/schemas/EventLocationResponseDTO"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UserCreationDTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        }
      },
      "UserDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "UserDTO1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "UserProfileUpdateDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "passwordHash" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "Authentication"
      }
    }
  },
  "paths" : {
    "/api/auth/login" : {
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Login",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/manager/eventlocations" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventLocationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Event Locations By Current Manager",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventLocationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventLocationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/eventlocations/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventLocationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventLocationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/events" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Events By Current Manager",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Event",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/events/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Event",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservationAllowance" : {
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventUserAllowancesDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Set Reservations Allowed For User",
        "tags" : [ "Event User Reservation Allowance" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservations" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Reservations",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReservationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservations/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReservationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Reservation By Id",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/seats" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SeatResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Manager Seats",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeatRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeatResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Seat",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/seats/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeatRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeatResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Manager Seat",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeatResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Manager Seat By Id",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Manager Seat",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/user/events" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventResponseDTO1"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Events",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      }
    },
    "/api/user/events/available-seats/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Available Seats",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      }
    },
    "/api/user/reservations" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReservationResponseDTO1"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get My Reservations",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReservationRequestCreateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReservationResponseDTO1"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      }
    },
    "/api/user/reservations/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponseDTO1"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get My Reservation By Id",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      }
    },
    "/api/users" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LimitedUserDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Users",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "MANAGER" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCreationDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      }
    },
    "/api/users/me" : {
      "put" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProfileUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Current User Profile",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER" ]
        } ]
      }
    },
    "/api/users/roles" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Available Roles",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      }
    },
    "/api/users/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProfileUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      },
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get User By Id",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      }
    }
  },
  "info" : {
    "title" : "Seat Reservation API",
    "version" : "1.0.0-SNAPSHOT",
    "description" : "The official REST API for Seat Reservation.",
    "contact" : {
      "name" : "FelixHertweck GitHub ",
      "url" : "https://github.com/FelixHertweck"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:8080",
    "description" : "Auto generated value"
  } ]
}