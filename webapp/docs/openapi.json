{
  "openapi" : "3.1.0",
  "components" : {
    "schemas" : {
      "AdminUserCreationDto" : {
        "type" : "object",
        "required" : [ "username", "password", "firstname", "lastname", "roles" ],
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string",
            "minLength" : 8
          },
          "lastname" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "minItems" : 1
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AdminUserUpdateDTO" : {
        "type" : "object",
        "required" : [ "email", "roles" ],
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "roles" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            },
            "minItems" : 1
          }
        }
      },
      "BlockSeatsRequestDTO" : {
        "type" : "object",
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "DetailedEventResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "bookingDeadline" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "eventLocation" : {
            "$ref" : "#/components/schemas/EventLocationResponseDTO"
          },
          "managerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventUserAllowancesIds" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "DetailedReservationResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seat" : {
            "$ref" : "#/components/schemas/SeatDTO"
          },
          "reservationDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        }
      },
      "EventLocationRequestDTO" : {
        "type" : "object",
        "required" : [ "name", "address", "capacity" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EventLocationResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "manager" : {
            "$ref" : "#/components/schemas/LimitedUserInfoDTO"
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SeatDTO"
            }
          }
        }
      },
      "EventRequestDTO" : {
        "type" : "object",
        "required" : [ "name", "description", "startTime", "endTime", "bookingDeadline", "eventLocationId" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "bookingDeadline" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "eventLocationId" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EventResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "bookingDeadline" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          },
          "location" : {
            "$ref" : "#/components/schemas/EventLocationResponseDTO"
          },
          "reservationsAllowed" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EventUserAllowanceUpdateDto" : {
        "type" : "object",
        "required" : [ "id", "eventId", "userId", "reservationsAllowedCount" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "reservationsAllowedCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EventUserAllowancesCreateDto" : {
        "type" : "object",
        "required" : [ "eventId", "userIds", "reservationsAllowedCount" ],
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userIds" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "minItems" : 1
          },
          "reservationsAllowedCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EventUserAllowancesDto" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "reservationsAllowedCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ImportEventLocationDto" : {
        "type" : "object",
        "required" : [ "name", "address", "capacity" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "capacity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImportSeatDto"
            }
          }
        }
      },
      "ImportSeatDto" : {
        "type" : "object",
        "required" : [ "seatNumber", "xCoordinate", "yCoordinate" ],
        "properties" : {
          "seatNumber" : {
            "type" : "string"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LimitedUserInfoDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "LocalDateTime" : {
        "type" : "string",
        "format" : "date-time",
        "examples" : [ "2022-03-10T12:15:50" ]
      },
      "LoginRequestDTO" : {
        "type" : "object",
        "required" : [ "username", "password" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "pattern" : "\\S"
          },
          "password" : {
            "type" : "string",
            "pattern" : "\\S"
          }
        }
      },
      "RegisterRequestDTO" : {
        "type" : "object",
        "required" : [ "username", "firstname", "lastname", "email", "password" ],
        "properties" : {
          "username" : {
            "type" : "string",
            "pattern" : "\\S"
          },
          "firstname" : {
            "type" : "string",
            "pattern" : "\\S"
          },
          "lastname" : {
            "type" : "string",
            "pattern" : "\\S"
          },
          "email" : {
            "type" : "string",
            "pattern" : "\\S"
          },
          "password" : {
            "type" : "string",
            "pattern" : "\\S",
            "minLength" : 8
          }
        }
      },
      "ReservationRequestDTO" : {
        "type" : "object",
        "required" : [ "eventId", "userId", "seatIds" ],
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatIds" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "deductAllowance" : {
            "type" : "boolean"
          }
        }
      },
      "ReservationResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seat" : {
            "$ref" : "#/components/schemas/SeatDTO"
          },
          "reservationDateTime" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        }
      },
      "ReservationStatus" : {
        "type" : "string",
        "enum" : [ "RESERVED", "BLOCKED" ]
      },
      "ReservationsRequestCreateDTO" : {
        "type" : "object",
        "required" : [ "eventId", "seatIds" ],
        "properties" : {
          "eventId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatIds" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int64"
            },
            "minItems" : 1
          }
        }
      },
      "SeatDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatNumber" : {
            "type" : "string"
          },
          "locationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "$ref" : "#/components/schemas/ReservationStatus"
          }
        }
      },
      "SeatRequestDTO" : {
        "type" : "object",
        "required" : [ "seatNumber", "eventLocationId", "xCoordinate", "yCoordinate" ],
        "properties" : {
          "seatNumber" : {
            "type" : "string"
          },
          "eventLocationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SeatResponseDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "seatNumber" : {
            "type" : "string"
          },
          "eventLocationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "xCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "yCoordinate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "status" : {
            "$ref" : "#/components/schemas/ReservationStatus"
          }
        }
      },
      "UserDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "emailVerified" : {
            "type" : "boolean"
          },
          "roles" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UserProfileUpdateDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstname" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "minLength" : 8
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "Authentication"
      }
    }
  },
  "paths" : {
    "/api/auth/login" : {
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Login",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/auth/logout" : {
      "post" : {
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Logout",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/auth/register" : {
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisterRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Register",
        "tags" : [ "Auth Resource" ]
      }
    },
    "/api/manager/eventlocations" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventLocationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Event Locations By Current Manager",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventLocationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventLocationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/eventlocations/import" : {
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportEventLocationDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventLocationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Event Location With Seats",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/eventlocations/import/{id}" : {
      "post" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "uniqueItems" : true,
                "items" : {
                  "$ref" : "#/components/schemas/ImportSeatDto"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventLocationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Import Seats To Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/eventlocations/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventLocationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventLocationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Event Location",
        "tags" : [ "Event Location Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/events" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DetailedEventResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Events By Current Manager",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DetailedEventResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Event",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/events/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DetailedEventResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Event",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DetailedEventResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Event By Id",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Event deleted"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Event",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservationAllowance" : {
      "put" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventUserAllowanceUpdateDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventUserAllowancesDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Reservation Allowance",
        "tags" : [ "Event Reservation Allowance Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventUserAllowancesCreateDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventUserAllowancesDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Set Reservations Allowed For User",
        "tags" : [ "Event Reservation Allowance Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventUserAllowancesDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Reservation Allowances",
        "tags" : [ "Event Reservation Allowance Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservationAllowance/event/{eventId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventUserAllowancesDto"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Reservation Allowances By Event Id",
        "tags" : [ "Event Reservation Allowance Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservationAllowance/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventUserAllowancesDto"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Reservation Allowance By Id",
        "tags" : [ "Event Reservation Allowance Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Reservation Allowance",
        "tags" : [ "Event Reservation Allowance Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservations" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DetailedReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Reservations",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReservationRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DetailedReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Reservations",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservations/block" : {
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlockSeatsRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Seats blocked successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DetailedReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Block Seats",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservations/event/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DetailedReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Reservations By Event Id",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/reservations/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DetailedReservationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Reservation By Id",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/seats" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SeatResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Manager Seats",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeatRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeatResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Seat",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/manager/seats/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SeatRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeatResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Manager Seat",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SeatResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Manager Seat By Id",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Manager Seat",
        "tags" : [ "Seat Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/user/confirm-email" : {
      "get" : {
        "summary" : "Confirm email address",
        "description" : "Confirms a user's email address using the provided token",
        "tags" : [ "User" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Email confirmed successfully"
          },
          "400" : {
            "description" : "Invalid token"
          },
          "404" : {
            "description" : "Token not found"
          },
          "410" : {
            "description" : "Token expired"
          }
        }
      }
    },
    "/api/user/events" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EventResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Events",
        "tags" : [ "Event Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/user/reservations" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get My Reservations",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReservationsRequestCreateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReservationResponseDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/user/reservations/export/{eventId}/csv" : {
      "get" : {
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CSV export of reservations for a specific event",
            "content" : {
              "text/csv" : { }
            }
          },
          "403" : {
            "description" : "Forbidden - User not authorized"
          },
          "404" : {
            "description" : "Not Found - Event not found"
          },
          "401" : {
            "description" : "Not Authorized"
          }
        },
        "summary" : "Export Reservations To Csv",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/user/reservations/{id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationResponseDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get My Reservation By Id",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete Reservation",
        "tags" : [ "Reservation Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      }
    },
    "/api/users/admin" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Users As Admin",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminUserCreationDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Create User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      }
    },
    "/api/users/admin/{id}" : {
      "put" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdminUserUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Delete User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN" ]
        } ]
      }
    },
    "/api/users/manager" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/LimitedUserInfoDTO"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get All Users",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "ADMIN", "MANAGER" ]
        } ]
      }
    },
    "/api/users/me" : {
      "put" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProfileUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "summary" : "Update Current User Profile",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Get Current User",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "ADMIN", "MANAGER" ]
        } ]
      }
    },
    "/api/users/roles" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "summary" : "Available Roles",
        "tags" : [ "User Resource" ],
        "security" : [ {
          "SecurityScheme" : [ "USER", "MANAGER", "ADMIN" ]
        } ]
      }
    }
  },
  "tags" : [ {
    "name" : "User",
    "description" : "User operations"
  } ],
  "info" : {
    "title" : "Seat Reservation API",
    "version" : "1.0.0-SNAPSHOT",
    "description" : "The official REST API for Seat Reservation.",
    "contact" : {
      "name" : "FelixHertweck GitHub ",
      "url" : "https://github.com/FelixHertweck"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:8080",
    "description" : "Auto generated value"
  } ]
}