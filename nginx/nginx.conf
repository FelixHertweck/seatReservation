events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # This is required to proxy Grafana Live WebSocket connections.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy for backend
        location ~ ^/(api|q)/ {
            proxy_pass http://backend:8080;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for grafana
        location /grafana/ {
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy Grafana Live WebSocket connections.
        location /grafana/api/live/ {
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # Proxy legal notice
        #location ~ ^/.*/legal-notice$ {
        #    return 301 http://target-legal-notice;
        #}

        # Proxy for privacy policy
        #location ~ ^/.*/privacy$ {
        #    return 301 http://target-privacy;
        #}

        # Proxy for frontend (Next.js)
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}