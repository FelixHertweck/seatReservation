name: nextjs-docker.yml

on:
  workflow_call:
    inputs:
      docker-file-path:
        description: "DockerFile Path"
        required: true
        type: string
      container-image-title:
        description: "Image title"
        required: true
        type: string
      image-name:
        description: "Name of the Docker image to build and push"
        required: false
        type: string
        default: ${{ github.repository }}

permissions:
  contents: write

jobs:
  docker:
    name: Docker Build & Publish
    runs-on: "ubuntu-24.04"
    timeout-minutes: 30

    env:
      NODE_VERSION: '22.18.x' 
      REGISTRY: ghcr.io

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: |
              cd webapp
              npm ci

      - name: Build
        run: |
              cd webapp
              npm run build:static

      - name: Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.9.2
        with:
          cosign-release: "v2.4.3"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.github-token || secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image-name }}
          labels: |
            org.opencontainers.image.title=${{ inputs.container-image-title }}
            org.opencontainers.image.authors=Felix Hertweck

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: ${{ inputs.docker-file-path }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}